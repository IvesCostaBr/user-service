name: Pipeline CD AUTH_API - Cloud Run

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Ambiente de deploy
        options:
          - staging
          - production
        required: true

env:
  PROJECT_ID: "${{ secrets.PROJECT_ID }}"
  IMAGE: "${{ secrets.REPO_IMAGE_NAME }}"
  TAG: "${{ github.sha }}"
  IMAGE_PATH: "gcr.io/${{ secrets.PROJECT_ID }}/${{ secrets.REPO_IMAGE_NAME }}:${{ github.sha }}"

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: "${{ github.ref }}"

      - name: exec tests
        run: echo ""

  checkoutImage:
    name: Image Valid
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: "${{ github.ref }}"

      - name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"

      - name: get image gcr
        id: get_image_repo
        run: |
          existing_tags=$(gcloud container images list-tags --filter="tags:${{ env.TAG }}" --format=json gcr.io/${{ env.PROJECT_ID }}/${{ env.IMAGE }})
          if [[ "$existing_tags" == "[]" ]]; then
              echo "result=0" >> "$GITHUB_OUTPUT"
          else
              echo "result=1" >> "$GITHUB_OUTPUT"
          fi
    outputs:
      value: ${{ steps.get_image_repo.outputs.result }}

  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [checkoutImage]
    if: ${{needs.checkoutImage.outputs.value == 0}}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: "${{ github.ref }}"

      - name: valid result
        run: echo '${{ needs.checkoutImage.outputs.value }}'

      - name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"
      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"
        with:
          project_id: "${{ env.PROJECT_ID }}"

      - name: "Docker auth"
        run: |-
          gcloud auth configure-docker gcr.io

      - name: Build and Push Docker Image
        run: |
          export CREDENTIAL='${{ secrets.GOOGLE_CREDENTIALS }}'
          echo $CREDENTIAL > ./src/configs/credential-gcp.json
          ls -la ./src/configs
          sudo docker build -t ${{ env.IMAGE_PATH }} . --build-arg PROJECT_ID="${{ env.PROJECT_ID }}" --build-arg DEPLOY="1" --build-arg PROJECT_ENVIRON="auth-${{github.event.inputs.environment}}"
          docker push ${{ env.IMAGE_PATH }}

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    if: ${{ always() }}
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: "${{ github.ref }}"

      - name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GOOGLE_CREDENTIALS }}"

      - id: "deploy"
        uses: "google-github-actions/deploy-cloudrun@v1"
        with:
          service: "api-auth-${{github.event.inputs.environment}}"
          image: "${{ env.IMAGE_PATH }}"

      - name: "Use output"
        run: 'curl "${{ steps.deploy.outputs.url }}"'
